@startuml
!include https://raw.githubusercontent.com/tmorin/plantuml-libs/v1.x/eventstorming/eventstorming-all.puml
'!include eventstorming-macros.puml
'!include eventstorming-constants.puml
'!include eventstorming-styles.puml

legend()

facade_command("SubmitMoment", "Submit Moment")
command("CreateMoment", "Create Moment")
event("MomentCreated", "Moment Created")
aggregate("Moment")
aggregate("Notification")
saga("WelcomeNotifier") [
    Welcome Notifier
    --description--
    1. generates the content of the notification
    2. creates the notification
]
command("CreateNotification", "Create Notification")
event("NotificationCreated", "Notification Created")
comment("EmailSenderComment") [
    When the service failed, the process retries for a maximum of three attempts. The delay between each retry must be at least 1 hours.
]
saga("EmailSender") [
    E-mail Sender
    --description--
    1. generates and sends the e-mail
    2. when the send is OK, flag the notification sent
    3. when the send is KO, flag the notification not sent
]
service("EmailService") [
    E-Mail Service
    --description--
    The service sending the e-mails.
]
command("FlagNotificationSent", "Flag Notification Sent")
event("NotificationSent", "Notification Sent")
command("FlagNotificationNotSent", "Flag Notification Not Sent")
event("NotificationNotSent", "Notification Not Sent")
query("GetWelcomeNotificationContent", "Get Welcome Notification Content")

SubmitMoment --> CreateMoment : triggers
CreateMoment .l. Moment : invoked on
CreateMoment --> MomentCreated : produces

MomentCreated --> WelcomeNotifier : starts
WelcomeNotifier -l-> GetWelcomeNotificationContent : 1.1 asks
WelcomeNotifier --> CreateNotification : 2.1 triggers
CreateNotification -> NotificationCreated : produces
NotificationCreated -u-> WelcomeNotifier : 2.2 ends

NotificationCreated -> EmailSender : starts
EmailSender -r-> EmailService : 1. uses
EmailSender --> FlagNotificationSent : 2.1 sends
FlagNotificationSent -> NotificationSent : produces
NotificationSent -u-> EmailSender : 2.2 ends
EmailSender --> FlagNotificationNotSent : 3.1 sends
FlagNotificationNotSent -> NotificationNotSent : produces
NotificationNotSent -u-> EmailSender : 3.2 ends
EmailSender .u. EmailSenderComment

CreateNotification .. Notification : invoked on
FlagNotificationSent .. Notification : invoked on
FlagNotificationNotSent .. Notification : invoked on
@enduml
