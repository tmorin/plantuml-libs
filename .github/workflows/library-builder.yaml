name: Library Builder

on:
  workflow_dispatch:
    inputs: { }

jobs:
  generate-workdir:
    name: Generate the working directory
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: "Setup NodeJs"
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: "Cache the dependencies"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node18-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node18-
      - name: "Install dependencies"
        run: npm ci --no-progress
      - name: "Generate the workdir"
        run: npm run generate:workdir
      - name: "Tar tmp directory"
        run: |
          mkdir -p .tmp
          tar cf tmp.tar .tmp
        working-directory: .workdir
      - name: "Upload the workdir"
        uses: actions/upload-artifact@v3
        with:
          name: workdir
          path: |
            .workdir/tmp.tar
            .workdir/source
            .workdir/library.yaml

  generate-package:
    name: Generate a package
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        PACKAGE_URN:
          - aws-q2-2022
          - azure-6
          - c4model
          - c4nord
          - domainstorytelling
          - eip-1
          - eventstorming
          - fontawesome-6
          - gcp
          - homecloud-2
          - material-4
          - simpleicons-7
    container: docker://thibaultmorin/plantuml-generator:1
    needs: [ generate-workdir ]
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - uses: actions/download-artifact@v4.1.7
        with:
          name: workdir
      - name: "Provide the .tmp directory"
        run: tar xf tmp.tar
      - name: "Delete package directory"
        run: rm -Rf "distribution/${{ matrix.PACKAGE_URN }}"
      - name: "Generate the package"
        run: plantuml-generator library generate library.yaml --urn "${{ matrix.PACKAGE_URN }}" --clean-urn "${{ matrix.PACKAGE_URN }}"
      - name: "Tar the package directory"
        run: tar cf "${{ matrix.PACKAGE_URN }}-distribution.tar" "distribution/${{ matrix.PACKAGE_URN }}"
      - name: "Upload the package directory"
        uses: actions/upload-artifact@v3
        with:
          name: "${{ matrix.PACKAGE_URN }}-distribution"
          path: "${{ matrix.PACKAGE_URN }}-distribution.tar"

  push-distribution:
    name: Push the distribution
    runs-on: ubuntu-22.04
    needs: [ generate-package ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4.1.7
      - name: "Refresh the distribution directory"
        run: |
          set -ex
          for tar_path in `find . -name "*-distribution.tar"`
          do
            tar_name=$(basename "$tar_path")
            package_urn="${tar_name%-*}"
            rm -Rf "distribution/$package_urn"
            tar xf "$tar_path"
          done
          rm -Rf *-distribution
          rm -Rf workdir
      - run: ls -hla
      - name: "Commit changes"
        run: |
          git config --local user.email "package_builder@users.noreply.github.com"
          git config --local user.name "package_builder"
          git add -A
          git commit -m "feat: refresh the library"
      - name: "Push the changes"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
